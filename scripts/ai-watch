#!/usr/bin/env bash
set -euo pipefail

dir="${1:-}"; shift || true
cmd="${1:-}"; shift || true

if [[ -z "$dir" || -z "$cmd" ]]; then
  echo '{"error":"usage: ai-watch <dir> "\"<cmd>\"""}'
  exit 2
fi

CACHE_DIR="${GRAIL_CACHE_DIR:-.grail-cache}"
REG_DIR="$CACHE_DIR/watchers"
mkdir -p "$REG_DIR"
ID="$$"
REG_FILE="$REG_DIR/$ID.json"
STARTED_AT="$(date -Iseconds)"

register() {
  cat > "$REG_FILE" <<JSON
{
  "id": "$ID",
  "dir": "$(pwd)/$dir",
  "cmd": "$cmd",
  "pid": $ID,
  "tool": "auto",
  "started_at": "$STARTED_AT",
  "status": "running"
}
JSON
}

cleanup() {
  rm -f "$REG_FILE" || true
}

trap cleanup EXIT INT TERM
register

if command -v watchexec >/dev/null 2>&1; then
  # shellcheck disable=SC2068
  watchexec -w "$dir" --shell=sh -- $cmd
  exit $?
fi

if command -v entr >/dev/null 2>&1; then
  while true; do
    find "$dir" -type f | entr -d sh -c "$cmd" || true
    sleep 0.2
  done
  exit 0
fi

echo '{"error":"no watcher found (install watchexec or entr)"}'
exit 1
