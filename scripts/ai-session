#!/usr/bin/env bash
set -euo pipefail

cmd="${1:-}"; shift || true

have_tmux() { command -v tmux >/dev/null 2>&1; }
json_escape() { python3 -c 'import json,sys; print(json.dumps(sys.stdin.read()))' 2>/dev/null || node -e 'let d="";process.stdin.on("data",c=>d+=c).on("end",()=>console.log(JSON.stringify(d)))' 2>/dev/null || sed 's/"/\\"/g'; }

if ! have_tmux; then
  echo '{"error":"tmux not found"}'
  exit 1
fi

case "$cmd" in
  new)
    name="${1:-}"; shift || true
    if [[ -z "$name" ]]; then
      echo '{"error":"usage: ai-session new <name> "\"<cmd>\"""}'
      exit 2
    fi
    run_cmd="${1:-}"; shift || true
    if [[ -z "$run_cmd" ]]; then
      echo '{"error":"usage: ai-session new <name> "\"<cmd>\"""}'
      exit 2
    fi
    if tmux has-session -t "$name" 2>/dev/null; then
      pane_id=$(tmux list-panes -t "$name" -F '#{pane_id}' | head -n1)
      pane_pid=$(tmux display-message -p -t "$name" '#{pane_pid}')
      printf '{"name":"%s","pane_id":"%s","pid":%s,"started_at":"%s","note":"session exists"}\n' "$name" "$pane_id" "${pane_pid:-0}" "$(date -Iseconds)"
      exit 0
    fi
    tmux new-session -d -s "$name" "$run_cmd"
    sleep 0.1
    pane_id=$(tmux list-panes -t "$name" -F '#{pane_id}' | head -n1)
    pane_pid=$(tmux display-message -p -t "$name" '#{pane_pid}')
    printf '{"name":"%s","pane_id":"%s","pid":%s,"started_at":"%s"}\n' "$name" "$pane_id" "${pane_pid:-0}" "$(date -Iseconds)"
    ;;
  list)
    if ! tmux list-sessions >/dev/null 2>&1; then
      echo '[]'
      exit 0
    fi
    out='['
    first=1
    while IFS= read -r line; do
      name=$(printf "%s" "$line" | awk -F: '{print $1}')
      attached=$(tmux display-message -p -t "$name" '#{?session_attached, true, false}')
      windows=$(tmux list-windows -t "$name" 2>/dev/null | wc -l | tr -d ' ')
      entry=$(printf '{"name":"%s","attached":%s,"windows":%s}' "$name" "$attached" "$windows")
      if [[ $first -eq 1 ]]; then out+="$entry"; first=0; else out+=",$entry"; fi
    done < <(tmux list-sessions -F '#S:' 2>/dev/null)
    out+=']'
    echo "$out"
    ;;
  logs)
    name="${1:-}"; shift || true
    tailn="${1:-200}"
    if [[ -z "$name" ]]; then echo '{"error":"usage: ai-session logs <name> [tail]"}'; exit 2; fi
    if ! tmux has-session -t "$name" 2>/dev/null; then echo '{"error":"session not found"}'; exit 1; fi
    tmux capture-pane -p -S -"$tailn" -t "$name"
    ;;
  kill)
    name="${1:-}"; shift || true
    if [[ -z "$name" ]]; then echo '{"error":"usage: ai-session kill <name>"}'; exit 2; fi
    if ! tmux has-session -t "$name" 2>/dev/null; then echo '{"ok":true,"note":"not found"}'; exit 0; fi
    tmux send-keys -t "$name" C-c || true
    sleep 1
    if tmux has-session -t "$name" 2>/dev/null; then tmux kill-session -t "$name"; fi
    echo '{"ok":true}'
    ;;
  *)
    echo '{"error":"usage: ai-session new|list|logs|kill"}'
    exit 2
    ;;
 esac
